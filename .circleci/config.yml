version: 2.1

orbs:
  win: circleci/windows@5.0.0
  node: circleci/node@5.1.0
  gh: circleci/github-cli@2.3.0

references:
  container_config: &container_config
    docker:
      - image: electronuserland/builder:wine-chrome
        environment:
          TARGET_ARCH: x64
    working_directory: ~/neon-wallet-desktop

  workspace_root: &workspace_root ~/neon-wallet-desktop

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

commands:
  prepare_linux:
    steps:
      - checkout
      - node/install:
          node-version: '18.14.2'
      - run: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4EB27DB2A3B88B8B
      - run: apt-get -y update
      - run: apt-get -y install libusb-1.0-0-dev icnsutils graphicsmagick libudev-dev
      - run: apt-get -y install libxtst6 libxss1 libgtk2.0-0 libnss3 libasound2 libgconf-2-4
      - run: npm config delete proxy
      - run: npm ci --timeout 1500000

jobs:
  test:
    <<: *container_config
    steps:
      - prepare_linux
      - run: npm run lint
      - save_cache:
          key: neon3-wallet-dependencies-cache-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
            - ./node_modules

  build_linux:
    <<: *container_config
    resource_class: large
    steps:
      - prepare_linux
      - run: npm run build:linux
      - store_artifacts:
          path: dist
          destination: build

  build_macos:
    macos:
      xcode: '16.0.0'
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - node/install:
          node-version: '18.14.2'
      - run: |
          brew uninstall --ignore-dependencies python3
          brew install python@3.11
      - run: npm ci
      - run: npm run build:mac
      - store_artifacts:
          path: dist
          destination: build

  build_win:
    executor:
      name: win/default
      size: 'medium'
    steps:
      - checkout
      - run: npm ci --timeout 1500000
      - run: npm run build:win
      - store_artifacts:
          path: dist
          destination: build

  generate_checksums:
    <<: *container_config
    steps:
      - prepare_linux
      - gh/install
      - run: npm run generate-checksums

workflows:
  version: 2
  build_and_test:
    jobs:
      # run test on every commit
      - test
  deploy:
    jobs:
      # build artifacts only on tags with name v.*
      - build_macos:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - build_win:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - generate_checksums:
          requires:
            - build_macos
            - build_win
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
